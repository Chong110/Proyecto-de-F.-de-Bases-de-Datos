/*
Integrantes:
Antonio F Arguedas Calvo
Daniel J DÃ­az Chong
Elenny Arrieta Madrigal
*/

CREATE DATABASE PROYECTOG2_BAASE_DE_DATOS;

USE PROYECTOG2_BAASE_DE_DATOS;

CREATE TABLE OFICINAS(
	ID_OFICINA INT NOT NULL IDENTITY,
	COD_OFICINA INT NOT NULL,
	NOMBRE_OFICINA VARCHAR (50) NOT NULL,
	FECHA_REGISTRO DATETIME NOT NULL,
	CONSTRAINT PK_OFICINAS PRIMARY KEY (ID_OFICINA),
	CONSTRAINT UQ_OFICINAS UNIQUE (COD_OFICINA)
);

INSERT INTO OFICINAS (
	COD_OFICINA,
	NOMBRE_OFICINA,
	FECHA_REGISTRO,
) VALUES (
	1,
	'OFICINA PRINCIPAL',
	GETDATE()
),
{ 2,
'OFICINA SECUNDARIA',
GETDATE(
) },
{ 3,
'OFICINA TERCERIA',
GETDATE(
) };

CREATE TABLE EMPLEADOS(
	ID_EMPLEADO INT NOT NULL IDENTITY,
	COD_EMPLEADO INT NOT NULL,
	IDENTIFICACION INT NOT NULL,
	NOMBRE_COMPLETO VARCHAR(30) NOT NULL,
	APELLIDO_PATERNO VARCHAR(20) NOT NULL,
	APELLIDO_MATERNO VARCHAR(20) NOT NULL,
	FECHA_NACIMIENTO DATETIME NOT NULL,
	COD_ESTADO INT NOT NULL,
	COD_OFICINA INT NOT NULL,
	COD_PUESTO INT NOT NULL,
	FECHA_REGISTRO DATETIME NOT NULL,
	CONSTRAINT PK_EMPLEADOS PRIMARY KEY (ID_EMPLEADO),
	CONSTRAINT UQ_EMPLEADOS UNIQUE (COD_EMPLEADO),
	CONSTRAINT UQ_EMPLEADOS UNIQUE (IDENTIFICACION),
	CONSTRAINT FK_EMPLEADOS_OFICINA FOREIGN KEY (COD_OFICINA) REFERENCES OFICINAS(COD_OFICINA)
);

INSERT INTO EMPLEADOS (
	COD_EMPLEADO,
	NOMBRE_EMPLEADO,
	APELLIDO_MATERNO,
	APELLIDO_PATERNO,
	IDENTIFICACION_EMPLEADO,
	TIPO_EMPLEADO,
	ESTADO_EMPLEADO,
	FECHA_REGISTRO,
	NOMBRE_USUARIO_REGISTRO
) VALUES (
	1,
	'JUAN',
	'PEREZ',
	'PEREZ',
	123456789,
	'ADMINISTRADOR',
	1,
	GETDATE()
),
{ 2,
'PEDRO',
'PEREZ',
'PEREZ',
12456789,
'GERENTE',
2,
GETDATE(
) },
{ 3,
'MARIA',
'PEREZ',
'PEREZ',
1256789,
'EMPLEADO',
1,
GETDATE(
) };

CREATE TABLE PUESTOS(
	ID_PUESTO INT NOT NULL IDENTITY,
	COD_PUESTO INT NOT NULL,
	PUESTO VARCHAR(50) NOT NULL,
	SALARIO INT NOT NULL,
	COD_EMPLEADO INT NOT NULL,
	FECHA_REGISTRO DATETIME NOT NULL,
	CONSTRAINT PK_PUESTOS PRIMARY KEY (COD_PUESTO),
	CONSTRAINT UQ_PUESTOS UNIQUE (PUESTO),
	CONSTRAINT FK_PUESTOS_EMPLEADO FOREIGN KEY (COD_EMPLEADO) REFERENCES EMPLEADOS(COD_EMPLEADO)
);

INSERT INTO PUESTOS (
	COD_PUESTO,
	PUESTO,
	SALARIO,
	COD_EMPLEADO,
	FECHA_REGISTRO,
	NOMBRE_USUARIO_REGISTRO
) VALUES (
	1,
	'GERENTE',
	1000000,
	1,
	GETDATE()
),
{ 2,
'ADMINISTRADOR',
500000,
2,
GETDATE(
) },
{ 3,
'EMPLEADO',
200000,
3,
GETDATE(
) };

CREATE TABLE CORREOS(
	ID_CORREO INT NOT NULL IDENTITY,
	CORREO VARCHAR(20) NOT NULL,
	COD_EMPLEADO INT NOT NULL,
	FECHA_REGISTRO DATETIME NOT NULL,
	USUARIO_REGISTRO VARCHAR(20) NOT NULL,
	COD_ESTADO INT NOT NULL,
	CONSTRAINT PK_CORREOS PRIMARY KEY (ID_CORREO),
	CONSTRAINT UQ_CORREOS UNIQUE (CORREO),
	CONSTRAINT FK_CORREOS_EMPLEADO FOREIGN KEY (COD_EMPLEADO) REFERENCES EMPLEADOS(COD_EMPLEADO)
);

INSERT INTO CORREOS (
	CORREO,
	COD_EMPLEADO,
	FECHA_REGISTRO,
	NOMBRE_USUARIO_REGISTRO,
	COD_ESTADO
) VALUES (
	'A@A',
	1,
	GETDATE()
),
{ 'B@B',
2,
GETDATE(
) },
{ 'C@C',
3,
GETDATE(
) };

CREATE TABLE TELEFONOS(
	ID_TE_EM INT NOT NULL IDENTITY,
	NUMERO_TELEFONO INT NOT NULL,
	COD_EMPLEADO INT NOT NULL,
	FECHA_REGISTRO DATETIME NOT NULL,
	USUARIO_REGISTRO VARCHAR(20) NOT NULL,
	CONSTRAINT PK_TELEFONOS_X_EMPLEADO PRIMARY KEY (ID_TE_EM),
	CONSTRAINT UQ_TELEFONOS_X_EMPLEADO UNIQUE (NUMERO_TELEFONO),
	CONSTRAINT FK_TELEFONOS_X_EMPLEADO_EMPLEADO FOREIGN KEY (COD_EMPLEADO) REFERENCES EMPLEADOS(COD_EMPLEADO)
);

INSERT INTO TELEFONOS (
	NUMERO_TELEFONO,
	COD_EMPLEADO,
	FECHA_REGISTRO,
	NOMBRE_USUARIO_REGISTRO
) VALUES (
	1456489,
	1,
	GETDATE()
),
{ 12489,
2,
GETDATE(
) },
{ 1256789,
3,
GETDATE(
) };

CREATE TABLE DIRECCIONES(
	ID_DIRECCIONES INT NOT NULL IDENTITY,
	DIRECCION VARCHAR(50) NOT NULL,
	COD_EMPLEADO INT NOT NULL,
	FECHA_REGISTRO DATETIME NOT NULL,
	USUARIO_REGISTRO VARCHAR(20) NOT NULL,
	CONSTRAINT PK_DIRECCIONES_X_EMPLEADO PRIMARY KEY (ID_DI_EM),
	CONSTRAINT FK_DIRECCIONES_X_EMPLEADO_EMPLEADO FOREIGN KEY (COD_EMPLEADO) REFERENCES EMPLEADOS(COD_EMPLEADO)
);

INSERT INTO DIRECCIONES (
	DIRECCION,
	COD_EMPLEADO,
	FECHA_REGISTRO,
	NOMBRE_USUARIO_REGISTRO
) VALUES (
	'CLL 1 # 1 - 1',
	1,
	GETDATE()
),
{ 'CLL 2 # 2 - 2',
2,
GETDATE(
) },
{ 'CLL 3 # 3 - 3',
3,
GETDATE(
) };

CREATE TABLE MARCAS(
	ID_MARCA INT NOT NULL IDENTITY,
	COD_MARCA INT NOT NULL,
	MARCA VARCHAR(20) NOT NULL,
	FECHA_REGISTRO DATETIME NOT NULL,
	NOMBRE_USUARIO VARCHAR(20) NOT NULL,
	CONSTRAINT PK_MARCAS PRIMARY KEY (COD_MARCA),
	CONSTRAINT UQ_MARCAS UNIQUE (MARCA)
);

INSERT INTO MARCAS (
	COD_MARCA,
	MARCA,
	FECHA_REGISTRO,
	NOMBRE_USUARIO_REGISTRO
) VALUES (
	1,
	'CHEVROLET',
	GETDATE()
),
{ 2,
'FORD',
GETDATE(
) },
{ 3,
'NISSAN',
GETDATE(
) };

CREATE TABLE TIPOS_VEHICULOS(
	ID_TIPO_VEHICULO INT NOT NULL IDENTITY,
	COD_TIPO_VEHICULO INT,
	TIPO_VEHICULO VARCHAR(20),
	FECHA_REGISTRO DATETIME,
	NOMBRE_USUARIO VARCHAR(20),
	CONSTRAINT PK_TIPOS_VEHICULOS PRIMARY KEY (ID_TIPO_VEHICULO)
);

CREATE TABLE ESTADOS_VEHICULOS(
	ID_ESTADO_VEHICULO INT NOT NULL IDENTITY,
	COD_ESTADO_VEHICULO INT,
	ESTADO_VEHICULO VARCHAR(20),
	FECHA_REGISTRO DATETIME,
	NOMBRE_USUARIO VARCHAR(20),
	CONSTRAINT PK_ESTADOS_VEHICULOS PRIMARY KEY (ID_ESTADO_VEHICULO)
);

CREATE TABLE MODELOS(
	ID_MODELO INT NOT NULL IDENTITY,
	COD_MODELO INT NOT NULL,
	MODELO VARCHAR(20) NOT NULL,
	FECHA_REGISTRO DATETIME,
	NOMBRE_USUARIO VARCHAR(20),
	CONSTRAINT PK_MODELOS PRIMARY KEY (COD_MODELO),
	CONSTRAINT UQ_MODELOS UNIQUE (MODELO)
);

INSERT INTO MODELOS (
	COD_MODELO,
	MODELO,
	FECHA_REGISTRO,
	NOMBRE_USUARIO_REGISTRO
) VALUES (
	1,
	'VECTRA',
	GETDATE()
),
{ 2,
'VECTRA GT',
GETDATE(
) },
{ 3,
'VECTRA GTZ',
GETDATE(
) };

CREATE TABLE VEHICULOS(
	ID_VEHICULO INT NOT NULL IDENTITY,
	NUM_PLACA INT NOT NULL,
	COD_MARCA INT NOT NULL,
	COD_MODELO INT NOT NULL,
	COD_TIPO_VEHICULO INT NOT NULL,
	COD_ESTADO_VEHICULO INT NOT NULL,
	FECHA_REGISTRO DATETIME NOT NULL,
	NOMBRE_USUARIO VARCHAR(20),
	CONSTRAINT PK_VEHICULOS PRIMARY KEY (ID_VEHICULO),
	CONSTRAINT UQ_VEHICULOS UNIQUE (NUM_PLACA),
	CONSTRAINT FK_VEHICULOS_MARCA FOREIGN KEY (COD_MARCA) REFERENCES MARCAS(COD_MARCA),
	CONSTRAINT FK_VEHICULOS_MODELO FOREIGN KEY (COD_MODELO) REFERENCES MODELOS(COD_MODELO),
	CONSTRAINT FK_VEHICULOS_TIPO_VEHICULO FOREIGN KEY (COD_TIPO_VEHICULO) REFERENCES TIPOS_VEHICULOS(COD_TIPO_VEHICULO)
);

INSERT INTO VEHICULOS (
	NUM_PLACA,
	COD_MARCA,
	COD_MODELO,
	COD_TIPO_VEHICULO,
	COD_ESTADO_VEHICULO,
	FECHA_REGISTRO,
	NOMBRE_USUARIO_REGISTRO
) VALUES (
	1,
	1,
	1,
	1,
	1,
	GETDATE()
),
{ 2,
2,
2,
2,
2,
GETDATE(
) },
{ 3,
3,
3,
3,
3,
GETDATE(
) };

CREATE TABLE REVISION(
	ID_REVISION INT NOT NULL IDENTITY,
	COD_REVISION INT,
	NUM_PLACA INT,
	FECHA_REVISION DATETIME,
	FECHA_REGISTRO DATETIME,
	NOMBRE_USUARIO_REGISTRO VARCHAR(20),
	CONSTRAINT PK_REVISION PRIMARY KEY (ID_REVISION)
);

INSERT INTO REVISION (
	COD_REVISION,
	NUM_PLACA,
	FECHA_REVISION,
	FECHA_REGISTRO,
	NOMBRE_USUARIO_REGISTRO
) VALUES (
	1,
	1,
	GETDATE(),
	GETDATE()
),
{ 2,
2,
GETDATE(
),
GETDATE(
) },
{ 3,
3,
GETDATE(
),
GETDATE(
) };

CREATE TABLE DETALLE_REVISION(
	ID_DETALLE_REVISION INT NOT NULL IDENTITY,
	COD_REVISION INT NOT NULL,
	COD_TIPO_MANTENIMIENTO INT NOT NULL,
	DESCRIPCION_MANTENIMIENTO VARCHAR(50) NOT NULL,
	OBSERVACIONES VARCHAR(50) NOT NULL,
	FECHA_REGISTRO DATETIME NOT NULL,
	NOMBRE_USUARIO_REGISTRO VARCHAR(20) NOT NULL,
	CONSTRAINT PK_DETALLE_REVISION PRIMARY KEY (ID_DETALLE_REVISION),
	CONSTRAINT FK_DETALLE_REVISION_REVISION FOREIGN KEY (ID_DETALLE_REVISION) REFERENCES REVISION(ID_REVISION)
);

INSERT INTO DETALLE_REVISION (
	COD_REVISION,
	COD_TIPO_MANTENIMIENTO,
	DESCRIPCION_MANTENIMIENTO,
	OBSERVACIONES,
	FECHA_REGISTRO,
	NOMBRE_USUARIO_REGISTRO
) VALUES (
	1,
	1,
	'CAMBIO DE ACEITE',
	'CAMBIO DE ACEITE',
	GETDATE()
),
{ 2,
2,
'CAMBIO DE ACEITE',
'CAMBIO DE ACEITE',
GETDATE(
) },
{ 3,
3,
'CAMBIO DE ACEITE',
'CAMBIO DE ACEITE',
GETDATE(
) };

/*tabla de paqueteria*/
CREATE TABLE CLIENTE (
	ID_CLIENTE INT NOT NULL IDENTITY,
	COD_CLIENTE INT NOT NULL,
	NOMBRE_CLIENTE VARCHAR(20) NOT NULL,
	APELLIDO_MATERNO VARCHAR(20) NOT NULL,
	APELLIDO_PATERNO VARCHAR(20) NOT NULL,
	IDENTIFICACION_CLIENTE INT NOT NULL,
	TIPO_CLIENTE VARCHAR(20) NOT NULL,
	ESTADO_CLIENTE BIT NOT NULL,
	CONSTRAINT PK_CLIENTE PRIMARY KEY (ID_CLIENTE),
	CONSTRAINT UQ_CLIENTE UNIQUE (COD_CLIENTE)
);

INSERT INTO CLIENTE (
	COD_CLIENTE,
	NOMBRE_CLIENTE,
	APELLIDO_MATERNO,
	APELLIDO_PATERNO,
	IDENTIFICACION_CLIENTE,
	TIPO_CLIENTE,
	ESTADO_CLIENTE
) VALUES (
	1,
	'JUAN',
	'PEREZ',
	'PEREZ',
	1,
	'NATURAL',
	1
),
{ 2,
'PEDRO',
'PEREZ',
'PEREZ',
2,
'NATURAL',
1 },
{ 3,
'JUAN',
'PEREZ',
'PEREZ',
3,
'NATURAL',
1 };

CREATE TABLE PAQUETERIA(
	ID_PAQUETERIA INT NOT NULL IDENTITY,
	NUM_PAQUETE INT NOT NULL,
	DESCRIPCION_PAQUETE VARCHAR (100) NOT NULL,
	COD_EMPLEADO_PROCESO INT NOT NULL,
	COD_TIPO_ENVIO INT NOT NULL,
	COD_TIPO_PAQUETE INT NOT NULL,
	COD_TIPO_PAGO INT NOT NULL,
	COD_EMPLEADO INT NOT NULL,
	COD_ESTADO_PAQUETE INT NOT NULL,
	FECHA_REGISTRO DATETIME NOT NULL,
	COSTO_FLETE INT NOT NULL,
	NOMBRE_USUARIO_REG VARCHAR(20) NOT NULL,
	FECHA_ULTIMA_MOD_REG DATETIME NOT NULL,
	CONSTRAINT PK_PAQUETERIA PRIMARY KEY (ID_PAQUETERIA),
	CONSTRAINT FK_PAQUETERIA_EMPLEADO FOREIGN KEY (COD_EMPLEADO_PROCESO) REFERENCES EMPLEADOS(COD_EMPLEADO)
);

INSERT INTO PAQUETERIA (
	NUM_PAQUETE,
	DESCRIPCION_PAQUETE,
	COD_EMPLEADO_PROCESO,
	COD_TIPO_ENVIO,
	COD_TIPO_PAQUETE,
	COD_TIPO_PAGO,
	COD_EMPLEADO,
	COD_ESTADO_PAQUETE,
	FECHA_REGISTRO,
	COSTO_FLETE,
	NOMBRE_USUARIO_REG,
	FECHA_ULTIMA_MOD_REG
) VALUES (
	1,
	'PAQUETE 1',
	1,
	1,
	1,
	1,
	1,
	1,
	GETDATE(),
	1,
	'JUAN',
	GETDATE()
),
{ 2,
'PAQUETE 2',
2,
2,
2,
2,
2,
2,
GETDATE(
),
2,
'PEDRO',
GETDATE(
) },
{ 3,
'PAQUETE 3',
3,
3,
3,
3,
3,
3,
GETDATE(
),
3,
'JUAN',
GETDATE(
) };

CREATE TABLE CORREOS_CLIENTE (
	ID_CO_CLI INT NOT NULL IDENTITY,
	CORREO VARCHAR (20) NOT NULL,
	COD_CLIENTE INT NOT NULL,
	FECHA_REGISTRO DATETIME NOT NULL,
	USUARIO_REGISTRO VARCHAR (20) NOT NULL,
	CONSTRAINT PK_CORREOS_CLIENTE PRIMARY KEY (ID_CO_CLI),
	CONSTRAINT FK_CORREOS_CLIENTE_CLIENTE FOREIGN KEY (ID_CO_CLI) REFERENCES CLIENTE(ID_CLIENTE)
);

INSERT INTO CORREOS_CLIENTE (
	CORREO,
	COD_CLIENTE,
	FECHA_REGISTRO,
	USUARIO_REGISTRO
) VALUES (
	'A@A',
	1,
	GETDATE(),
	'JUAN'
),
{ 'B@B',
2,
GETDATE(
),
'PEDRO' },
{ 'C@C',
3,
GETDATE(
),
'JUAN' };

CREATE TABLE TELEFONOS_CLIENTE(
	ID_TE_CLI INT NOT NULL IDENTITY,
	TELEFONO INT NOT NULL,
	COD_CLIENTE INT NOT NULL,
	FECHA_REGISTRO DATETIME NOT NULL,
	USUARIO_REGISTRO VARCHAR (20) NOT NULL,
	CONSTRAINT PK_TELEFONOS_CLIENTE PRIMARY KEY (ID_TE_CLI),
	CONSTRAINT FK_TELEFONOS_CLIENTE_CLIENTE FOREIGN KEY (ID_TE_CLI) REFERENCES CLIENTE(ID_CLIENTE)
);

INSERT INTO TELEFONOS_CLIENTE (
	TELEFONO,
	COD_CLIENTE,
	FECHA_REGISTRO,
	USUARIO_REGISTRO
) VALUES (
	12345678,
	1,
	GETDATE(),
	'JUAN'
),
{ 87654321,
2,
GETDATE(
),
'PEDRO' },
{ 12345678,
3,
GETDATE(
),
'JUAN' };

CREATE TABLE DIRECCIONES_CLIENTE(
	ID_DI_CLI INT NOT NULL IDENTITY,
	UBICACION_EXACTA VARCHAR(100) NOT NULL,
	COD_PROVINCIA INT NOT NULL,
	COD_CANTON INT NOT NULL,
	COD_DISTRITO INT NOT NULL,
	COD_CLIENTE INT NOT NULL,
	FECHA_REGISTRO DATETIME NOT NULL,
	USUARIO_REGISTRO VARCHAR (20) NOT NULL,
	CONSTRAINT PK_DIRECCIONES_CLIENTE PRIMARY KEY (ID_DI_CLI),
	CONSTRAINT FK_DIRECCIONES_CLIENTE_CLIENTE FOREIGN KEY (ID_DI_CLI) REFERENCES CLIENTE(ID_CLIENTE)
);

INSERT INTO DIRECCIONES_CLIENTE (
	UBICACION_EXACTA,
	COD_PROVINCIA,
	COD_CANTON,
	COD_DISTRITO,
	COD_CLIENTE,
	FECHA_REGISTRO,
	USUARIO_REGISTRO
) VALUES (
	'UBICACION 1',
	1,
	1,
	1,
	1,
	GETDATE(),
	'JUAN'
),
{ 'UBICACION 2',
2,
2,
2,
2,
GETDATE(
),
'PEDRO' },
{ 'UBICACION 3',
3,
3,
3,
3,
GETDATE(
),
'JUAN' };

CREATE TABLE FACTURAS (
	ID_FACTURA INT NOT NULL IDENTITY,
	NUM_FACTURA INT NOT NULL,
	FECHA_FACTURA DATETIME NOT NULL,
	COD_CLIENTE INT NOT NULL,
	TOTAL_FACTURA INT NOT NULL,
	ESTADO_FACTURA BIT NOT NULL,
	FECHA_REGISTRO DATETIME NOT NULL,
	NOMBRE_USUARIO_REGISTRO VARCHAR (30) NOT NULL,
	CONSTRANT PK_FACTURAS PRIMARY KEY (ID_FACTURA),
	CONSTRAINT UQ_FACTURAS UNIQUE (NUM_FACTURA),
	CONSTRAINT FK_FACTURAS_CLIENTE FOREIGN KEY (COD_CLIENTE) REFERENCES CLIENTE(COD_CLIENTE)
);

INSERT INTO FACTURAS (
	NUM_FACTURA,
	FECHA_FACTURA,
	COD_CLIENTE,
	TOTAL_FACTURA,
	ESTADO_FACTURA,
	FECHA_REGISTRO,
	NOMBRE_USUARIO_REGISTRO
) VALUES (
	1,
	GETDATE(),
	1,
	1,
	1,
	GETDATE(),
	'JUAN'
),
{ 2,
GETDATE(
),
2,
2,
2,
GETDATE(
),
'PEDRO' },
{ 3,
GETDATE(
),
3,
3,
3,
GETDATE(
),
'JUAN' };

CREATE TABLE DETALLES_FACTURA(
	ID_DETALLE_FACTURA INT NOT NULL IDENTITY,
	NUM_FACTURA INT NOT NULL,
	LINEA INT NOT NULL,
	NUM_PAQUETE INT NOT NULL,
	COSTO_FLETE INT NOT NULL,
	TOTAL_ANTES_IVA INT NOT NULL,
	TOTAL_IVA INT NOT NULL,
	TOTAL_LINEA INT NOT NULL,
	CONSTRANT PK_DETALLES_FACTURA PRIMARY KEY (ID_DETALLE_FACTURA),
	CONSTRAINT FK_DETALLES_FACTURA_FACTURA FOREIGN KEY (NUM_FACTURA) REFERENCES FACTURAS(NUM_FACTURA)
);

INSERT INTO DETALLES_FACTURA (
	NUM_FACTURA,
	LINEA,
	NUM_PAQUETE,
	COSTO_FLETE,
	TOTAL_ANTES_IVA,
	TOTAL_IVA,
	TOTAL_LINEA
) VALUES (
	1,
	1,
	1,
	1,
	1,
	1,
	1
),
{ 2,
2,
2,
2,
2,
2,
2 },
{ 3,
3,
3,
3,
3,
3,
3 };

CREATE VIEW V_CLIENTES AS
	SELECT
		C.ID_CLIENTE,
		C.NOMBRE_CLIENTE,
		C.APELLIDO_CLIENTE,
		C.CORREO_CLIENTE,
		C.CEDULA_CLIENTE,
		C.FECHA_REGISTRO,
		C.USUARIO_REGISTRO,
		T.ID_TE_CLI,
		T.TELEFONO,
		T.COD_CLIENTE,
		T.FECHA_REGISTRO,
		T.USUARIO_REGISTRO,
		D.ID_DI_CLI,
		D.UBICACION_EXACTA,
		D.COD_PROVINCIA,
		D.COD_CANTON,
		D.COD_DISTRITO,
		D.COD_CLIENTE,
		D.FECHA_REGISTRO,
		D.USUARIO_REGISTRO
	FROM
		CLIENTE             C
		INNER JOIN TELEFONOS_CLIENTE T
		ON C.ID_CLIENTE = T.COD_CLIENTE
		INNER JOIN DIRECCIONES_CLIENTE D
		ON C.ID_CLIENTE = D.COD_CLIENTE;

SELECT
	*
FROM
	V_CLIENTES;

CREATE VIEW V_FACTURAS AS
	SELECT
		F.ID_FACTURA,
		F.NUM_FACTURA,
		F.FECHA_FACTURA,
		F.COD_CLIENTE,
		F.TOTAL_FACTURA,
		F.ESTADO_FACTURA,
		F.FECHA_REGISTRO,
		F.NOMBRE_USUARIO_REGISTRO,
		C.ID_CLIENTE,
		C.NOMBRE_CLIENTE,
		C.APELLIDO_CLIENTE,
		C.CORREO_CLIENTE,
		C.CEDULA_CLIENTE,
		C.FECHA_REGISTRO,
		C.USUARIO_REGISTRO,
		T.ID_TE_CLI,
		T.TELEFONO,
		T.COD_CLIENTE,
		T.FECHA_REGISTRO,
		T.USUARIO_REGISTRO,
		D.ID_DI_CLI,
		D.UBICACION_EXACTA,
		D.COD_PROVINCIA,
		D.COD_CANTON,
		D.COD_DISTRITO,
		D.COD_CLIENTE,
		D.FECHA_REGISTRO,
		D.USUARIO_REGISTRO,
		DF.ID_DETALLE_FACTURA,
		DF.NUM_FACTURA,
		DF.LINEA,
		DF.NUM_PAQUETE,
		DF.COSTO_FLETE,
		DF.TOTAL_ANTES_IVA,
		DF.TOTAL_IVA,
		DF.TOTAL_LINEA
	FROM
		FACTURAS            F
		INNER JOIN CLIENTE C
		ON F.COD_CLIENTE = C.ID_CLIENTE
		INNER JOIN TELEFONOS_CLIENTE T
		ON F.COD_CLIENTE = T.COD_CLIENTE
		INNER JOIN DIRECCIONES_CLIENTE D
		ON F.COD_CLIENTE = D.COD_CLIENTE
		INNER JOIN DETALLES_FACTURA DF
		ON F.NUM_FACTURA = DF.NUM_FACTURA;

SELECT
	*
FROM
	V_FACTURAS;

-- CREAR UN TRIGGER PARA ACTUALIZAR, INSERTAR Y ELIMINAR EN LA TABLA CLIENTE

CREATE TRIGGER TR_CLIENTE
ON CLIENTE
FOR INSERT, UPDATE, DELETE
AS 
ALTER TABLE CLIENTE
ADD NOMBRE_COMPLETO VARCHAR(100);

UPDATE CLIENTE
SET NOMBRE_COMPLETO = NOMBRE_CLIENTE + ' ' + APELLIDO_CLIENTE;

INSERT INTO CLIENTE (NOMBRE_COMPLETO)
SELECT NOMBRE_CLIENTE + ' ' + APELLIDO_CLIENTE FROM CLIENTE;

DELETE FROM CLIENTE
WHERE NOMBRE_COMPLETO = NOMBRE_CLIENTE + ' ' + APELLIDO_CLIENTE;


-- crear un procedimiento almacenado para insertar, actualizar y eliminar en la tabla cliente

CREATE PROCEDURE SP_CLIENTE
@NOMBRE_CLIENTE VARCHAR(50),
@APELLIDO_CLIENTE VARCHAR(50),
@CORREO_CLIENTE VARCHAR(50),
@CEDULA_CLIENTE VARCHAR(50),
@FECHA_REGISTRO DATETIME,
@USUARIO_REGISTRO VARCHAR(50)
AS
BEGIN
	INSERT INTO CLIENTE (
		NOMBRE_CLIENTE,
		APELLIDO_CLIENTE,
		CORREO_CLIENTE,
		CEDULA_CLIENTE,
		FECHA_REGISTRO,
		USUARIO_REGISTRO
	) VALUES (
		@NOMBRE_CLIENTE,
		@APELLIDO_CLIENTE,
		@CORREO_CLIENTE,
		@CEDULA_CLIENTE,
		@FECHA_REGISTRO,
		@USUARIO_REGISTRO
	);
END;

EXEC SP_CLIENTE 'JUAN', 'PEREZ', 'A2@Q', '123456789', '2020-01-01', 'ADMIN';